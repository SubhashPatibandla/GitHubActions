name: CI/CD Helm + ECR + EKS

on:
  push:
    branches:
      - main
      - develop

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: devops-demo
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install
      - run: npm test

  build-and-push-ecr:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - run: |
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY || \
          aws ecr create-repository --repository-name $ECR_REPOSITORY
      - id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

  deploy:
    needs: build-and-push-ecr
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Set Deployment Environment
        run: |
          if [ "${GITHUB_REF##*/}" == "develop" ]; then
            echo "CLUSTER_NAME=demo-cluster-staging" >> $GITHUB_ENV
            echo "VALUES_FILE=values-staging.yaml" >> $GITHUB_ENV
            echo "RELEASE_NAME=devops-demo-staging" >> $GITHUB_ENV
          elif [ "${GITHUB_REF##*/}" == "main" ]; then
            echo "CLUSTER_NAME=demo-cluster-prod" >> $GITHUB_ENV
            echo "VALUES_FILE=values-prod.yaml" >> $GITHUB_ENV
            echo "RELEASE_NAME=devops-demo-prod" >> $GITHUB_ENV
          else
            echo "Branch not configured. Exiting."
            exit 0
          fi
      - run: aws eks update-kubeconfig --region $AWS_REGION --name demo-cluster
      - run: |
          helm upgrade --install $RELEASE_NAME ./charts/devops-demo \
            --values $VALUES_FILE \
            --set image.tag=$IMAGE_TAG

